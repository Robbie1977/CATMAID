# Generated by Django 2.1.9 on 2019-06-13 18:47

from django.db import migrations


forward = """
  CREATE OR REPLACE FUNCTION on_edit_treenode_connector_update_edges() RETURNS trigger
  LANGUAGE plpgsql
  AS $$ BEGIN
      IF OLD.treenode_id IS DISTINCT FROM NEW.treenode_id OR
         OLD.connector_id IS DISTINCT FROM NEW.connector_id THEN

          UPDATE treenode_connector_edge
              SET
                  id = NEW.id,
                  edge = sub.edge
              FROM (
                  SELECT ST_MakeLine(
                          ST_MakePoint(t.location_x, t.location_y, t.location_z),
                          ST_MakePoint(c.location_x, c.location_y, c.location_z)) AS edge,
                      notify_conditionally('catmaid.spatial-update', '{"project_id": ' || NEW.project_id || ', "type": "edge", "p1": [' ||
                          c.location_x || ',' || c.location_y || ',' || c.location_z || '], "p2": [' ||
                          t.location_x || ',' || t.location_y || ',' || t.location_z || ']}')
                   FROM treenode t, connector c
                   WHERE t.id = NEW.treenode_id
                       AND c.id = NEW.connector_id
              ) sub
              WHERE id = OLD.id;
      END IF;
      RETURN NEW;
  END;
  $$;
"""

backward = """
  CREATE OR REPLACE FUNCTION on_edit_treenode_connector_update_edges() RETURNS trigger
  LANGUAGE plpgsql
  AS $$ BEGIN
      IF OLD.treenode_id IS DISTINCT FROM NEW.treenode_id OR
         OLD.connector_id IS DISTINCT FROM NEW.connector_ID THEN

          UPDATE treenode_connector_edge
              SET
                  id = NEW.id,
                  edge = sub.edge
              FROM (
                  SELECT ST_MakeLine(
                          ST_MakePoint(t.location_x, t.location_y, t.location_z),
                          ST_MakePoint(c.location_x, c.location_y, c.location_z)) AS edge,
                      notify_conditionally('catmaid.spatial-update', '{"project_id": ' || NEW.project_id || ', "type": "edge", "p1": [' ||
                          c.location_x || ',' || c.location_y || ',' || c.location_z || '], "p2": [' ||
                          t.location_x || ',' || t.location_y || ',' || t.location_z || ']}')
              FROM treenode t, connector c
              WHERE id = OLD.id
                AND t.id = NEW.treenode_id
                AND c.id = NEW.connector_id
              ) sub;
      END IF;
      RETURN NEW;
  END;
  $$;
"""

class Migration(migrations.Migration):

    dependencies = [
        ('catmaid', '0068_add_annotate_with_token_permission'),
    ]

    operations = [
      migrations.RunSQL(forward, backward),
    ]
